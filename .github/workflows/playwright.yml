name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: write

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Build Docker Image
        run: |
          docker build -t playwright-tests:latest .
      
      - name: Run Tests in Docker Container
        run: |
          docker run --rm \
            -e CI=true \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            playwright-tests:latest \
            bash -c "
              npm ci &&
              npx playwright install --with-deps &&
              git diff --diff-filter=ACMRT --name-only ${{ github.event.before }} ${{ github.sha }} > changed-files.txt &&
              CHANGED_TESTS=$(grep -E '^tests/.*\.spec\.(js|ts)$' changed-files.txt || true) &&
              if [ -z \"$CHANGED_TESTS\" ]; then
                echo 'No changed test files. Skipping tests.';
                exit 0;
              fi &&
              npx playwright test $CHANGED_TESTS
            "

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload JUnit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: results.xml

      - name: Upload JSON Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: json-results
          path: results.json

      - name: Upload CTRF JSON Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ctrf-json-results
          path: ctrf/ctrf-report.json

      - name: Publish Test Summary Results
        if: always()
        run: npx github-actions-ctrf ctrf/ctrf-report.json

      - name: Generate Summary Table
        if: always()
        run: node dist/core/cli.js summary ctrf/ctrf-report.json --title "Summary table"

      - name: Generate Default Tables
        if: always()
        run: node dist/core/cli.js ctrf/ctrf-report.json --title "Default tables"

      - name: Notify Committer on Success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            const pusher = context.payload.pusher.name;
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `\u2705 **Playwright Tests Passed**\n\nHi @${pusher},\n\nAll tests passed successfully. You can view the [Workflow Run](${runUrl}) for details.`
            });

      - name: Notify Committer on Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const pusher = context.payload.pusher.name;
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `\u1F6A8 **Playwright Tests Failed**\n\nHi @${pusher},\n\nSome tests failed for the files you pushed. Please review the [Workflow Run](${runUrl}).`
            });
